---
kind: pipeline
type: docker
name: Debian (w/ tests) (amd64)

steps:
- name: submodules
  image: drone/git
  commands:
  - git fetch --tags
  - git submodule update --init --recursive --depth=1

- name: build
  image: debian:sid
  commands:
  - echo \"Building on ${DRONE_STAGE_MACHINE}\"
  - echo \"man-db man-db/auto-update boolean false\" | debconf-set-selections
  - apt-get -o=Dpkg::Use-Pty=0 -q update
  - apt-get -o=Dpkg::Use-Pty=0 -q install -y eatmydata
  - eatmydata apt-get -o=Dpkg::Use-Pty=0 -q dist-upgrade -y
  - eatmydata apt-get -o=Dpkg::Use-Pty=0 -q install -y --no-install-recommends cmake git ca-certificates ninja-build ccache g++ libsystemd-dev libboost-thread-dev libgtest-dev libboost-serialization-dev libboost-program-options-dev libunbound-dev nettle-dev libevent-dev libminiupnpc-dev libunwind8-dev libsodium-dev libssl-dev libreadline-dev libhidapi-dev libusb-1.0-0-dev python3 pkg-config libsqlite3-dev qttools5-dev libcurl4-openssl-dev gdb
  - mkdir build
  - cd build
  - cmake .. -G Ninja -DCMAKE_CXX_FLAGS=-fdiagnostics-color=always -DCMAKE_BUILD_TYPE=Release -DLOCAL_MIRROR=https://builds.belnet.dev/deps -DUSE_LTO=ON -DBUILD_TESTS=OFF
  - ninja -j6 -v
  - cd ..
  - apt-get install zip -y
  - zip -r binary.zip build/bin/*

- name: scp-files
  image: appleboy/drone-scp
  settings:
    host:
     - deb.beldex.io
    user: ubuntu
    password:
     from_secret: ssh_password
    port: 22
    command_timeout: 120
    command_timeout: 2m
    target: /home/ubuntu
    source:
      - binary.zip
---      
kind: pipeline
type: docker
name: Debian Debug (amd64)

steps:
- name: submodules
  image: drone/git
  commands:
  - git fetch --tags
  - git submodule update --init --recursive --depth=1

- name: build
  image: debian:sid
  commands:
  - echo \"Building on ${DRONE_STAGE_MACHINE}\"
  - echo \"man-db man-db/auto-update boolean false\" | debconf-set-selections
  - apt-get -o=Dpkg::Use-Pty=0 -q update
  - apt-get -o=Dpkg::Use-Pty=0 -q install -y eatmydata
  - eatmydata apt-get -o=Dpkg::Use-Pty=0 -q dist-upgrade -y
  - eatmydata apt-get -o=Dpkg::Use-Pty=0 -q install -y --no-install-recommends cmake git ca-certificates ninja-build ccache g++ libsystemd-dev libboost-thread-dev libgtest-dev libboost-serialization-dev libboost-program-options-dev libunbound-dev nettle-dev libevent-dev libminiupnpc-dev libunwind8-dev libsodium-dev libssl-dev libreadline-dev libhidapi-dev libusb-1.0-0-dev python3 pkg-config libsqlite3-dev qttools5-dev libcurl4-openssl-dev gdb
  - mkdir build
  - cd build
  - cmake .. -G Ninja -DCMAKE_CXX_FLAGS=-fdiagnostics-color=always -DCMAKE_BUILD_TYPE=Debug -DLOCAL_MIRROR=https://builds.belnet.dev/deps -DUSE_LTO=OFF -DBUILD_TESTS=ON 
  - ninja -j6 -v
  - cd ..
  - apt-get install zip -y
  - zip -r binary1.zip build/bin/*

- name: scp-files
  image: appleboy/drone-scp
  settings:
    host:
     - deb.beldex.io
    user: ubuntu
    password:
     from_secret: ssh_password
    port: 22
    command_timeout: 120
    command_timeout: 2m
    target: /home/ubuntu
    source:
      - binary1.zip

---
kind: pipeline
type: docker
name: Debian Clang-11 (amd64)

steps:
- name: submodules
  image: drone/git
  commands:
  - git fetch --tags
  - git submodule update --init --recursive --depth=1

- name: build
  image: debian:sid
  commands:
  - echo \"Building on ${DRONE_STAGE_MACHINE}\"
  - echo \"man-db man-db/auto-update boolean false\" | debconf-set-selections
  - apt-get -o=Dpkg::Use-Pty=0 -q update
  - apt-get -o=Dpkg::Use-Pty=0 -q install -y eatmydata
  - eatmydata apt-get -o=Dpkg::Use-Pty=0 -q dist-upgrade -y
  - eatmydata apt-get -o=Dpkg::Use-Pty=0 -q install -y --no-install-recommends cmake git ca-certificates ninja-build ccache clang-11 libsystemd-dev libboost-thread-dev libgtest-dev libboost-serialization-dev libboost-program-options-dev libunbound-dev nettle-dev libevent-dev libminiupnpc-dev libunwind8-dev libsodium-dev libssl-dev libreadline-dev libhidapi-dev libusb-1.0-0-dev python3 pkg-config libsqlite3-dev qttools5-dev libcurl4-openssl-dev gdb
  - mkdir build
  - cd build
  - cmake .. -G Ninja -DCMAKE_CXX_FLAGS=-fdiagnostics-color=always -DCMAKE_BUILD_TYPE=Release -DLOCAL_MIRROR=https://builds.belnet.dev/deps -DUSE_LTO=ON -DBUILD_TESTS=ON -DCMAKE_C_COMPILER=clang-11 -DCMAKE_CXX_COMPILER=clang++-11 
  - ninja -j6 -v
  - cd ..
  - apt-get install zip -y
  - zip -r binary2.zip build/bin/*

- name: scp-files
  image: appleboy/drone-scp
  settings:
    host:
     - deb.beldex.io
    user: ubuntu
    password:
     from_secret: ssh_password
    port: 22
    command_timeout: 120
    command_timeout: 2m
    target: /home/ubuntu
    source:
      - binary2.zip

---
kind: pipeline
type: docker
name: Debian gcc-10 (amd64)

steps:
- name: submodules
  image: drone/git
  commands:
  - git fetch --tags
  - git submodule update --init --recursive --depth=1

- name: build
  image: debian:testing
  commands:
  - echo \"Building on ${DRONE_STAGE_MACHINE}\"
  - echo \"man-db man-db/auto-update boolean false\" | debconf-set-selections
  - apt-get -o=Dpkg::Use-Pty=0 -q update
  - apt-get -o=Dpkg::Use-Pty=0 -q install -y eatmydata
  - eatmydata apt-get -o=Dpkg::Use-Pty=0 -q dist-upgrade -y
  - eatmydata apt-get -o=Dpkg::Use-Pty=0 -q install -y --no-install-recommends cmake git ca-certificates ninja-build ccache g++-10 libsystemd-dev libboost-thread-dev libgtest-dev libboost-serialization-dev libboost-program-options-dev libunbound-dev nettle-dev libevent-dev libminiupnpc-dev libunwind8-dev libsodium-dev libssl-dev libreadline-dev libhidapi-dev libusb-1.0-0-dev python3 pkg-config libsqlite3-dev qttools5-dev libcurl4-openssl-dev gdb
  - mkdir build
  - cd build
  - cmake .. -G Ninja -DCMAKE_CXX_FLAGS=-fdiagnostics-color=always -DCMAKE_BUILD_TYPE=Release -DLOCAL_MIRROR=https://builds.belnet.dev/deps -DUSE_LTO=OFF -DBUILD_TESTS=ON -DCMAKE_C_COMPILER=gcc-10 -DCMAKE_CXX_COMPILER=g++-10 -DBUILD_DEBUG_UTILS=ON
  - ninja -j6 -v
  - cd ..
  - apt-get install zip -y
  - zip -r binary3.zip build/bin/*

- name: scp-files
  image: appleboy/drone-scp
  settings:
    host:
     - deb.beldex.io
    user: ubuntu
    password:
     from_secret: ssh_password
    port: 22
    command_timeout: 120
    command_timeout: 2m
    target: /home/ubuntu
    source:
      - binary3.zip       

---
kind: pipeline
type: docker
name: Debian buster (i386)

steps:
- name: submodules
  image: drone/git
  commands:
  - git fetch --tags
  - git submodule update --init --recursive --depth=1

- name: build
  image: i386/debian:buster
  commands:
  - echo \"Building on ${DRONE_STAGE_MACHINE}\"
  - echo \"man-db man-db/auto-update boolean false\" | debconf-set-selections
  - apt-get -o=Dpkg::Use-Pty=0 -q update
  - apt-get -o=Dpkg::Use-Pty=0 -q install -y eatmydata
  - eatmydata apt-get -o=Dpkg::Use-Pty=0 -q dist-upgrade -y
  - eatmydata apt-get -o=Dpkg::Use-Pty=0 -q install -y --no-install-recommends cmake git ca-certificates ninja-build ccache g++ libsystemd-dev libboost-thread-dev libgtest-dev libboost-serialization-dev libboost-program-options-dev libunbound-dev nettle-dev libevent-dev libminiupnpc-dev libunwind8-dev libsodium-dev libssl-dev libreadline-dev libhidapi-dev libusb-1.0-0-dev python3 pkg-config libsqlite3-dev qttools5-dev libcurl4-openssl-dev gdb
  - mkdir build
  - cd build
  - cmake .. -G Ninja -DCMAKE_CXX_FLAGS=-fdiagnostics-color=always -DCMAKE_BUILD_TYPE=Release -DLOCAL_MIRROR=https://builds.belnet.dev/deps -DUSE_LTO=OFF -DBUILD_TESTS=ON -DDOWNLOAD_SODIUM=ON -DARCH_ID=i386
  - ninja -j6 -v
  - cd ..
  - apt-get install zip -y
  - zip -r binary4.zip build/bin/*

- name: scp-files
  image: appleboy/drone-scp
  settings:
    host:
     - deb.beldex.io
    user: ubuntu
    password:
     from_secret: ssh_password
    port: 22
    command_timeout: 120
    command_timeout: 2m
    target: /home/ubuntu
    source:
      - binary4.zip  

---      
kind: pipeline
type: docker
name: Ubuntu focal (amd64)

steps:
- name: submodules
  image: drone/git
  commands:
  - git fetch --tags
  - git submodule update --init --recursive --depth=1

- name: build
  image: ubuntu:focal
  commands:      
  - echo \"Building on ${DRONE_STAGE_MACHINE}\"
  - echo \"man-db man-db/auto-update boolean false\" | debconf-set-selections
  - apt-get -o=Dpkg::Use-Pty=0 -q update
  - apt-get -o=Dpkg::Use-Pty=0 -q install -y eatmydata
  - eatmydata apt-get -o=Dpkg::Use-Pty=0 -q dist-upgrade -y
  - eatmydata apt-get -o=Dpkg::Use-Pty=0 -q install -y --no-install-recommends cmake git ca-certificates ninja-build ccache g++ libsystemd-dev libboost-thread-dev libgtest-dev libboost-serialization-dev libboost-program-options-dev libunbound-dev nettle-dev libevent-dev libminiupnpc-dev libunwind8-dev libsodium-dev libssl-dev libreadline-dev libhidapi-dev libusb-1.0-0-dev python3 pkg-config libsqlite3-dev qttools5-dev libcurl4-openssl-dev gdb
  - mkdir build
  - cd build
  - cmake .. -G Ninja -DCMAKE_CXX_FLAGS=-fdiagnostics-color=always -DCMAKE_BUILD_TYPE=Release -DLOCAL_MIRROR=https://builds.belnet.dev/deps -DUSE_LTO=OFF -DBUILD_TESTS=ON 
  - ninja -j6 -v
  - cd ..
  - apt-get install zip -y
  - zip -r binary5.zip build/bin/*

- name: scp-files
  image: appleboy/drone-scp
  settings:
    host:
     - deb.beldex.io
    user: ubuntu
    password:
     from_secret: ssh_password
    port: 22
    command_timeout: 120
    command_timeout: 2m
    target: /home/ubuntu
    source:
      - binary5.zip          

---
kind: pipeline
type: docker
name: Debian (ARM64)

steps:
- name: submodules
  image: drone/git
  commands:
  - git fetch --tags
  - git submodule update --init --recursive --depth=1

- name: build
  image: debian:sid
  commands:      
  - echo \"Building on ${DRONE_STAGE_MACHINE}\"
  - echo \"man-db man-db/auto-update boolean false\" | debconf-set-selections
  - apt-get -o=Dpkg::Use-Pty=0 -q update
  - apt-get -o=Dpkg::Use-Pty=0 -q install -y eatmydata
  - eatmydata apt-get -o=Dpkg::Use-Pty=0 -q dist-upgrade -y
  - eatmydata apt-get -o=Dpkg::Use-Pty=0 -q install -y --no-install-recommends cmake git ca-certificates ninja-build ccache g++ libsystemd-dev libboost-thread-dev libgtest-dev libboost-serialization-dev libboost-program-options-dev libunbound-dev nettle-dev libevent-dev libminiupnpc-dev libunwind8-dev libsodium-dev libssl-dev libreadline-dev libhidapi-dev libusb-1.0-0-dev python3 pkg-config libsqlite3-dev qttools5-dev libcurl4-openssl-dev gdb
  - mkdir build
  - cd build
  - cmake .. -G Ninja -DCMAKE_CXX_FLAGS=-fdiagnostics-color=always -DCMAKE_BUILD_TYPE=Release -DLOCAL_MIRROR=https://builds.belnet.dev/deps -DUSE_LTO=OFF 
  - ninja -j1 rpc wallet -v
  - ninja -j2 daemon device_trezor -v
  - ninja -j1 wallet_rpc_server -v
  - ninja -j2 -v
  - cd ..
  - apt-get install zip -y
  - zip -r binary6.zip build/bin/*

- name: scp-files
  image: appleboy/drone-scp
  settings:
    host:
     - deb.beldex.io
    user: ubuntu
    password:
     from_secret: ssh_password
    port: 22
    command_timeout: 120
    command_timeout: 2m
    target: /home/ubuntu
    source:
      - binary6.zip                   

--- 
kind: pipeline
type: docker
name: Debian buster (armhf)

steps:
- name: submodules
  image: drone/git
  commands:
  - git fetch --tags
  - git submodule update --init --recursive --depth=1

- name: build
  image: arm32v7/debian:buster
  commands:      
  - echo \"Building on ${DRONE_STAGE_MACHINE}\"
  - echo \"man-db man-db/auto-update boolean false\" | debconf-set-selections
  - apt-get -o=Dpkg::Use-Pty=0 -q update
  - apt-get -o=Dpkg::Use-Pty=0 -q install -y eatmydata
  - eatmydata apt-get -o=Dpkg::Use-Pty=0 -q dist-upgrade -y
  - eatmydata apt-get -o=Dpkg::Use-Pty=0 -q install -y --no-install-recommends cmake git ca-certificates ninja-build ccache g++ libsystemd-dev libboost-thread-dev libgtest-dev libboost-serialization-dev libboost-program-options-dev libunbound-dev nettle-dev libevent-dev libminiupnpc-dev libunwind8-dev libsodium-dev libssl-dev libreadline-dev libhidapi-dev libusb-1.0-0-dev python3 pkg-config libsqlite3-dev qttools5-dev libcurl4-openssl-dev gdb
  - mkdir build
  - cd build
  - cmake .. -G Ninja -DCMAKE_CXX_FLAGS=-fdiagnostics-color=always -DCMAKE_BUILD_TYPE=Release -DLOCAL_MIRROR=https://builds.belnet.dev/deps -DUSE_LTO=OFF -DDOWNLOAD_SODIUM=ON -DARCH_ID=armhf
  - ninja -j1 rpc wallet -v
  - ninja -j2 daemon device_trezor -v
  - ninja -j1 wallet_rpc_server -v
  - ninja -j2 -v
  - cd ..
  - apt-get install zip -y
  - zip -r binary7.zip build/bin/*

- name: scp-files
  image: appleboy/drone-scp
  settings:
    host:
     - deb.beldex.io
    user: ubuntu
    password:
     from_secret: ssh_password
    port: 22
    command_timeout: 120
    command_timeout: 2m
    target: /home/ubuntu
    source:
      - binary7.zip        

---
kind: pipeline
type: docker
name: Static (bionic amd64)

steps:
- name: submodules
  image: drone/git
  commands:
  - git fetch --tags
  - git submodule update --init --recursive --depth=1

- name: build
  image: ubuntu:bionic
  commands:      
  - echo \"Building on ${DRONE_STAGE_MACHINE}\"
  - echo \"man-db man-db/auto-update boolean false\" | debconf-set-selections
  - apt-get -o=Dpkg::Use-Pty=0 -q update
  - apt-get -o=Dpkg::Use-Pty=0 -q install -y eatmydata
  - eatmydata apt-get -o=Dpkg::Use-Pty=0 -q dist-upgrade -y
  - eatmydata apt-get -o=Dpkg::Use-Pty=0 -q install -y --no-install-recommends cmake git ca-certificates ninja-build ccache g++-8 autoconf automake make qttools5-dev file libtool gperf pkg-config patch openssh-client gdb
  - mkdir build
  - cd build
  - cmake .. -G Ninja -DCMAKE_CXX_FLAGS=-fdiagnostics-color=always -DCMAKE_BUILD_TYPE=Release -DLOCAL_MIRROR=https://builds.belnet.dev/deps -DUSE_LTO=ON -DBUILD_STATIC_DEPS=ON -DCMAKE_C_COMPILER=gcc-8 -DCMAKE_CXX_COMPILER=g++-8 -DARCH=x86-64
  - ninja -j6 -v
  - ninja strip_binaries
  - ninja create_tarxz
  - cd ..
  - apt-get install zip -y
  - zip -r binary8.zip build/bin/*

- name: scp-files
  image: appleboy/drone-scp
  settings:
    host:
     - deb.beldex.io
    user: ubuntu
    password:
     from_secret: ssh_password
    port: 22
    command_timeout: 120
    command_timeout: 2m
    target: /home/ubuntu
    source:
      - binary8.zip                

---
kind: pipeline
type: docker
name: Static (win64)

steps:
- name: submodules
  image: drone/git
  commands:
  - git fetch --tags
  - git submodule update --init --recursive --depth=1

- name: build
  image: ubuntu:focal
  commands:      
  - echo \"Building on ${DRONE_STAGE_MACHINE}\"
  - echo \"man-db man-db/auto-update boolean false\" | debconf-set-selections
  - apt-get -o=Dpkg::Use-Pty=0 -q update
  - apt-get -o=Dpkg::Use-Pty=0 -q install -y eatmydata
  - eatmydata apt-get -o=Dpkg::Use-Pty=0 -q dist-upgrade -y
  - eatmydata apt-get -o=Dpkg::Use-Pty=0 -q install -y --no-install-recommends cmake git ca-certificates ninja-build ccache g++ g++-mingw-w64-x86-64 autoconf automake make qttools5-dev file libtool gperf pkg-config patch openssh-client
  - mkdir build
  - cd build
  - cmake .. -G Ninja -DCMAKE_CXX_FLAGS=-fdiagnostics-color=always -DCMAKE_BUILD_TYPE=Release -DLOCAL_MIRROR=https://builds.belnet.dev/deps -DUSE_LTO=OFF -DCMAKE_TOOLCHAIN_FILE=../cmake/64-bit-toolchain.cmake -DBUILD_STATIC_DEPS=ON -DARCH=x86-64
  - ninja -j6 -v
  - cd ..
  - apt-get install zip -y
  - zip -r binary9.zip build/bin/*

- name: scp-files
  image: appleboy/drone-scp
  settings:
    host:
     - deb.beldex.io
    user: ubuntu
    password:
     from_secret: ssh_password
    port: 22
    command_timeout: 120
    command_timeout: 2m
    target: /home/ubuntu
    source:
      - binary9.zip             
---